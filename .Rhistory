labels=hours[pos])
hours[pos]
intervstp <- tapply(act$steps, INDEX=act$interval, sum, na.rm=T)
plot(intervstp, type="l", xaxt="n")
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
hours <- paste(substr(time,1,2), ":", substr(time,3,4), sep="")
pos <- seq(1,length(hours),length.out=round(length(hours)/10))
axis(1, at=pos, labels=hours[pos])
plot(intervstp, type="l", xaxt="n", ylab="N steps per 5-min interval", xlab"hour")
plot(intervstp, type="l", xaxt="n", ylab="N steps per 5-min interval", xlab="hour")
plot(intervstp, type="l", xaxt="n",
ylab="N steps per 5-min interval",
xlab="Daily time")
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
hours <- paste(substr(time,1,2), ":", substr(time,3,4), sep="")
pos <- seq(1,length(hours),length.out=round(length(hours)/10))
axis(1, at=pos, labels=hours[pos])
intervstp
max(intervstp)
wich (max(intervstp))
which (max(intervstp))
which (intervstp == max(intervstp))
p <- which (intervstp == max(intervstp))
p
p[1]
p[[1]]
names(p)
intervstp[104]
names(intervstp)
names(intervstp) <- hours
intervstp
which (intervstp == max(intervstp))
max.pos <- which (intervstp == max(intervstp))
max.pos
max.pos+1
max.pos[1]+1
max.pos[[1]]
max.pos[[1]] + 1
which (intervstp == max(intervstp))[[1]]
max.pos <- which (intervstp == max(intervstp))[[1]]
next.pos <- max.pos + 1
next
next.pos
max.pos
hours[max.pos]
intervstp <- tapply(act$steps, INDEX=act$interval, sum, na.rm=T)
max.pos <- which (intervstp == max(intervstp))[[1]]
next.pos <- max.pos + 1
max.pos
next.pos
min.interv <- hours[max.pos]
max.interv <- hours[next.pos]
min.interv
max.interv
act[is.na(act),]
nrow(act[is.na(act),])
nrow(act)
nrow(act[is.na(act),])
which(act[is.na(act),])
act[is.na(act),]
which(act == is.na(act))
is.na(act)
names(act)
which(act == is.na(act$steps))
act[is.na(act$steps),]
?which
which(act, is.na(act$steps))
is.na(act$steps)
which(act, is.na(act$steps))
which(is.na(act$steps))
length(which(is.na(act$steps)))
na.rows
na.rows <- nrow(act[is.na(act),])
na.rows
na.pos <- which(is.na(act$steps))
na.pos
act[na.pos, "steps"]
act[na.pos,]
intervstp
i=1
is.na(act[i,"steps"])
act[i,"steps"]
act[i,]
act[i,"steps"]
act[i,]
act[i,"interval"]
?match
match(act[i,"interval"], dimnames(intervstp)[[1]])
dimnames(intervstp)[[1]]
pos.mean <- match(act[i,"interval"], dimnames(intervstp)[[1]])
pos.mean
setwd("C:/Users/saavedra/Google Drive/FPI-GD/cursos/reproducible research - coursera/assignment/peer assessment 1/repdata_peerassessment1-master")
act <- read.csv("activity/activity.csv")
# Caltulates the position of the max and min limit of the interval with higher mean steps
max.pos <- which (intervstp == max(intervstp))[[1]]
next.pos <- max.pos + 1
min.time <- hours[max.pos]
max.time <- hours[next.pos]
# Filling NAs
na.pos <- which(is.na(act$steps))
for (i in 1:nrow(act)){
if (is.na(act[i,"steps"])){
pos.mean <- match(act[i,"interval"], dimnames(intervstp)[[1]])
intervstp[[]]pos.mean
# Total number of rows with NAs
tot.rows <- nrow(act)
na.rows <- nrow(act[is.na(act),])
dailystp <- tapply(act$steps, INDEX=act$date, sum, na.rm=T)
hist(dailystp, main="Frequency of daily steps", xlab="Daily steps")
intervstp <- tapply(act$steps, INDEX=act$interval, sum, na.rm=T)
plot(intervstp, type="l", xaxt="n",
main="Average daily activity pattern",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
# Computing axis lab
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
hours <- paste(substr(time,1,2), ":", substr(time,3,4), sep="")
# Selecting positions and printing labels
pos <- seq(1,length(hours),length.out=round(length(hours)/10))
axis(1, at=pos, labels=hours[pos])
meanstp <- round(mean(dailystp, na.rm=T))
medianstp <- round(median(dailystp, na.rm=T))
intervstp[[1]][pos.mean]
intervstp
intervstp[[1]][pos.mean]
act[i,"steps"]
act[i,"steps"] <- intervstp[[1]][pos.mean]
act[i,"steps"]
act[i,]
for (i in 1:nrow(act)){
if (is.na(act[i,"steps"])){
pos.mean <- match(act[i,"interval"], dimnames(intervstp)[[1]])
act[i,"steps"] <- intervstp[[1]][pos.mean]
}
}
na.pos <- which(is.na(act$steps))
na
which(is.na(act$steps))
is.na(act$steps)
1:nrow(act)
i
is.na(act[i,"steps"])
pos.mean <- match(act[i,"interval"], dimnames(intervstp)[[1]])
pos.mean
intervstp[[1]][pos.mean]
intervstp[[1]]
intervstp[[i]][pos.mean]
intervstp[[i]]
intervstp[[1]]
intervstp
intervstp[pos.mean]
pos.mean
intervstp[pos.mean][1]
intervstp[pos.mean][[1]]
act[i,"steps"] <- intervstp[pos.mean][[1]]
for (i in 1:nrow(act)){
if (is.na(act[i,"steps"])){
pos.mean <- match(act[i,"interval"], dimnames(intervstp)[[1]])
act[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
which(is.na(act$steps))
dailystp
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
actNA <- act
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
dailystpNA
hist(dailystpNA, main="Frequency of daily steps (NA filled)", xlab="Daily steps")
```
dailystpNA
actNA <- act
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
actNA
intervstp
meanstp
intervstp
intervstp <- tapply(act$steps, INDEX=act$interval, mean, na.rm=T)
plot(intervstp, type="l", xaxt="n",
main="Average daily activity pattern",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
# Computing axis lab
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
actNA <- act
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
head(actNA)
intervstpNA <- tapply(actNA$steps, INDEX=actNA$interval, mean)
intervstpNA
intervstpNA <- round(tapply(actNA$steps, INDEX=actNA$interval, mean))
intervstpNA
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
dailystpNA
actNA <- act
actNA
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
dailystpNA
intervstp
intervstp <- tapply(act$steps, INDEX=act$interval, mean, na.rm=T)
intervstp
intervstp <- round(tapply(act$steps, INDEX=act$interval, mean, na.rm=T))
intervstp
plot(intervstp, type="l", xaxt="n",
main="Average daily activity pattern",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
hours <- paste(substr(time,1,2), ":", substr(time,3,4), sep="")
# Selecting positions and printing labels
pos <- seq(1,length(hours),length.out=round(length(hours)/10))
axis(1, at=pos, labels=hours[pos])
intervstp
intervstp
pos.mean
intervstp[pos.mean]
HEAD(actNA)
head(actNA)
act[is.na(act),]
act <- read.csv("activity/activity.csv")
actNA <- act
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
dailystpNA
hist(dailystpNA, main="Frequency of daily steps (NA filled)", xlab="Daily steps")
act[act$day=="2012-11-30",]
act[act$date=="2012-11-30",]
actNA[actNA$date=="2012-11-30",]
actNA[actNA$date=="2012-11-30","steps"]
sum(actNA[actNA$date=="2012-11-30","steps"])
sum(dailystpNA)
dailystpNA
intervstp
sum(intervstp)
meanstpNA <- round(mean(dailystpNA, na.rm=T))
medianstpNA <- round(median(dailystpNA, na.rm=T))
meanstpNA
medianstpNA
meanstp
meanstpNA
medianstp
medianstpNA
meanstp / meanstpNA
meanstpNA / meanstp
(meanstpNA / meanstp) * 100
round((meanstpNA / meanstp) * 100)
round(medianstpNA / medianstp) * 100)
round((medianstpNA / medianstp) * 100)
medianstpNA
medianstp
round((meanstpNA / meanstp) * 100) -100
round((medianstpNA / medianstp) * 100) - 100
?weekdays
weekdays(actNA, abbreviate = FALSE)
weekdays(actNA$date, abbreviate = FALSE)
head(actNA)
str(actNA)
weekdays(actNA$date)
as.Date(actNA$date)
actNA$date <- as.Date(actNA$date)
weekdays(actNA$date)
actNA$day <- weekdays(actNA$date)
?redoce
?recode
library(cars)
library(car)
install.packages("car")
library(car)
install.packages("car")
library(car)
?recode
actNA$weekday <- recode(actNA$day,
"c('lunes','martes','miércoles','jueves','viernes') =
'weekday';
c('sábado','domingo') = 'weekend'")
actNA$weekday
actNA$day <- weekdays(actNA$date, "English United States")
Sys.setlocale("LC_TIME","English United States")
actNA$day <- weekdays(actNA$date)
actNA$day
?Sys.setlocale
Sys.getlocale(category = "LC_ALL")
Sys.getlocale(category = "LC_TIME")
Sys.setlocale("LC_TIME","English United States")
Sys.setlocale("LC_TIME",locale="English United States")
Sys.setlocale("LC_TIME",locale="English United States")
Sys.setlocale("LC_TIME",locale="en_US")
actNA$date <- as.Date(actNA$date)
actNA$day <- weekdays(actNA$date)
actNA$day
Sys.setlocale("LC_TIME",locale="en_US")
Sys.setlocale("LC_TIME",locale="English")
actNA$date <- as.Date(actNA$date)
actNA$day <- weekdays(actNA$date)
actNA$day
actNA$weekday <- recode(actNA$day,
"c('Monday','Tuesday','Wednesday','Thursday','Friday') = 'weekday';
c('Saturday','Sunday') = 'weekend'")
actNA$weekday
intervstp.days <- round(tapply(actNA$steps, INDEX=list(actNA$weekday, actNA$interval), mean, na.rm=T))
intervstp.days
plot(intervstp.days$weekday, type="l", xaxt="n",
main="Average daily activity pattern",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
str(intervstp.days)
intervstp.days["weekday"]
intervstp.days[1]
intervstp.days <- as.data.frame(intervstp.days)
intervstp.days
str(intervstp.days)
str(intervstp.days)
?trasp
?invert
rev(intervstp.days )
rev(intervstp.days)
intervstp.days
intervstp.days <- as.data.frame(rev(intervstp.days))
intervstp.days
str(intervstp.days )
intervstp.days <- round(tapply(actNA$steps, INDEX=list(actNA$weekday, actNA$interval), mean, na.rm=T))
intervstp.days <- as.data.frame(rev(intervstp.days))
intervstp.days <- round(tapply(actNA$steps, INDEX=list(actNA$weekday, actNA$interval), mean, na.rm=T))
intervstp.days[1,]
intervstp.days[2,]
names(intervstp.days )
intervstp.days
plot(intervstp.days[1,], type="l", xaxt="n",
main="Average daily activity pattern in weekends",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
axis(1, at=pos, labels=hours[pos])
plot(intervstp.days[2,], type="l", xaxt="n",
main="Average daily activity pattern in weekends",
ylab="Mean number of steps per 5-min interval",
xlab="Daily time")
axis(1, at=pos, labels=hours[pos])
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
### 1. Load the data (i.e. read.csv())
```{r}
setwd("C:/Users/saavedra/Google Drive/FPI-GD/cursos/reproducible research - coursera/assignment/peer assessment 1/repdata_peerassessment1-master")
act <- read.csv("activity/activity.csv")
```
### 2. Process/transform the data (if necessary) into a format suitable for your analysis
Dataset does not need transformation
## What is mean total number of steps taken per day?
### 1. Calculate the total number of steps taken per day
```{r}
dailystp <- tapply(act$steps, INDEX=act$date, sum, na.rm=T)
dailystp
```
### 2. If you do not understand the difference between a histogram and a barplot, research the difference between them. Make a histogram of the total number of steps taken each day
```{r fig.height=4}
hist(dailystp, main="Frequency of daily steps", xlab="Daily steps")
```
### 3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
meanstp <- round(mean(dailystp, na.rm=T))
medianstp <- round(median(dailystp, na.rm=T))
```
The mean total number of steps taken per day is `r meanstp`
The median total number of steps taken per day is `r medianstp`
## What is the average daily activity pattern?
### 1. Make a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)
```{r}
intervstp <- round(tapply(act$steps, INDEX=act$interval, mean, na.rm=T))
plot(intervstp, type="l", xaxt="n",
main="Average daily activity pattern",
ylab="Mean number of steps per 5-min interval",
xlab="Time interval")
# Computing axis lab
time <- dimnames(intervstp)[[1]]
for (i in 1:length(time)){
if (nchar(time[i])==1){time[i] <- paste("000", time[i], sep="")}
if (nchar(time[i])==2){time[i] <- paste("00", time[i], sep="")}
if (nchar(time[i])==3){time[i] <- paste("0", time[i], sep="")}
}
hours <- paste(substr(time,1,2), ":", substr(time,3,4), sep="")
# Selecting positions and printing labels
pos <- seq(1,length(hours),length.out=round(length(hours)/10))
axis(1, at=pos, labels=hours[pos])
```
### 2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
```{r}
# Caltulates the position of the max and min limit of the interval with higher mean steps
max.pos <- which (intervstp == max(intervstp))[[1]]
next.pos <- max.pos + 1
min.time <- hours[max.pos]
max.time <- hours[next.pos]
```
The 5-minute interval with the maximum mean number of steps across all the days is the one which corresponds between `r min.time` and `r max.time`.
## Imputing missing values
### 1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
```{r}
# Total number of rows with NAs
tot.rows <- nrow(act)
na.rows <- nrow(act[is.na(act),])
```
The total number of registers in the dataset is `r tot.rows` of which `r na.rows` contain NAs
### 2. Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.
```{r}
# Filling NAs with the average of the steps at this 5-min interval across the study
actNA <- act
for (i in 1:nrow(actNA)){
if (is.na(actNA[i,"steps"])){
pos.mean <- match(actNA[i,"interval"], dimnames(intervstp)[[1]])
actNA[i,"steps"] <- intervstp[pos.mean][[1]]
}
}
```
### 3. Create a new dataset that is equal to the original dataset but with the missing data filled in.
The dataset is already created and called **actNA**
### 4. Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
```{r}
dailystpNA <- tapply(actNA$steps, INDEX=actNA$date, sum)
dailystpNA
```
```{r fig.height=4}
hist(dailystpNA, main="Frequency of daily steps (NA filled)", xlab="Daily steps")
```
```{r}
meanstpNA <- round(mean(dailystpNA, na.rm=T))
medianstpNA <- round(median(dailystpNA, na.rm=T))
```
The mean total number of steps taken per day is `r meanstpNA`
The median total number of steps taken per day is `r medianstpNA`
```{r}
mean.perc <- round((meanstpNA / meanstp) * 100) -100
median.perc <- round((medianstpNA / medianstp) * 100) - 100
```
The impact of filling missing data with the average 5min-interval number of steps is reflected in the mean and median daily number of steps which are incremented in a `r mean.perc` and a `r median.perc` percent respectivelly
## Are there differences in activity patterns between weekdays and weekends?
### 1. Create a new factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
```{r}
Sys.setlocale("LC_TIME",locale="English")
actNA$date <- as.Date(actNA$date)
actNA$day <- weekdays(actNA$date)
#install.packages("car")
library(car)
actNA$weekday <- recode(actNA$day,
"c('Monday','Tuesday','Wednesday','Thursday','Friday') = 'weekday';
c('Saturday','Sunday') = 'weekend'")
```
### 2. Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). See the README file in the GitHub repository to see an example of what this plot should look like using simulated data.
plot(intervstp.days[1,], type="l", xaxt="n",
main="Average daily activity pattern in weekdays",
ylab="Mean number of steps per 5-min interval",
xlab="Time interval")
intervstp.days <- round(tapply(actNA$steps, INDEX=list(actNA$weekday, actNA$interval), mean, na.rm=T))
```
plot(intervstp.days[1,], type="l", xaxt="n",
main="Average daily activity pattern in weekdays",
ylab="Mean number of steps per 5-min interval",
xlab="Time interval")
axis(1, at=pos, labels=hours[pos])
library(ggplot2)
